name: Solar System Workflow k8s

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #     - 'feature/*'

jobs:
  docker-build:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

  dev-deploy:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    needs: docker-build
    env:
      MONGO_URI: "mongodb+srv://ahmed:${{ secrets.MONGO_PASSWORD }}@github-actions-iti-2025.global.mongocluster.cosmos.azure.com/?tls=true&authMechanism=SCRAM-SHA-256&retrywrites=false&maxIdleTimeMS=120000"
      MONGO_USERNAME: "ahmed"
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install kubectl CLI
        uses: azure/setup-kubectl@v3
        with:
          version: '1.26.0'

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      - name: Show Cluster Info
        run: |
          kubectl version --short
          echo "----------------------"
          kubectl get nodes

      - name: Replace tokens in manifests
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: 'kubernetes/development/deployment.yaml'

        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

      - name: Show Processed YAML
        run: cat kubernetes/development/*.yaml

      - name: Create MongoDB Secret
        run: |
          kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
          --from-literal=MONGO_URI="${MONGO_URI}" \
          --from-literal=MONGO_USERNAME="${MONGO_USERNAME}" \
          --from-literal=MONGO_PASSWORD="${MONGO_PASSWORD}" \
          --save-config \
          --dry-run=client \
          -o yaml | kubectl apply -f -

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/development